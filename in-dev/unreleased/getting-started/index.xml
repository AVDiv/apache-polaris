<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started with Apache Polaris on Apache Polaris</title><link>https://polaris.apache.org/in-dev/unreleased/getting-started/</link><description>Recent content in Getting Started with Apache Polaris on Apache Polaris</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://polaris.apache.org/in-dev/unreleased/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing Dependencies</title><link>https://polaris.apache.org/in-dev/unreleased/getting-started/install-dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/getting-started/install-dependencies/</guid><description>This guide serves as an introduction to several key entities that can be managed with Apache Polaris (Incubating), describes how to build and deploy Polaris locally, and finally includes examples of how to use Polaris with Apache Sparkâ„¢.
Prerequisites This guide covers building Polaris, deploying it locally or via Docker, and interacting with it using the command-line interface and Apache Spark. Before proceeding with Polaris, be sure to satisfy the relevant prerequisites listed here.</description></item><item><title>Using Polaris</title><link>https://polaris.apache.org/in-dev/unreleased/getting-started/using-polaris/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/getting-started/using-polaris/</guid><description>Setup Ensure your CLIENT_ID &amp;amp; CLIENT_SECRET variables are already defined, as they were required for starting the Polaris server earlier.
export CLIENT_ID=YOUR_CLIENT_ID export CLIENT_SECRET=YOUR_CLIENT_SECRET Refer to the Creating a Catalog page for instructions on defining a catalog for your specific storage type. The following examples assume the catalog&amp;rsquo;s name is quickstart_catalog.
In Polaris, the catalog is the top-level entity that objects like tables and views are organized under.
The DEFAULT_BASE_LOCATION value you provided at catalog creation time will be the default location that objects in this catalog should be stored in.</description></item></channel></rss>