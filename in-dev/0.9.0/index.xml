<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>0.9.0 on Apache Polaris</title><link>https://polaris.apache.org/in-dev/0.9.0/</link><description>Recent content in 0.9.0 on Apache Polaris</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://polaris.apache.org/in-dev/0.9.0/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick Start</title><link>https://polaris.apache.org/in-dev/0.9.0/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/quickstart/</guid><description>This guide serves as a introduction to several key entities that can be managed with Apache Polaris (Incubating), describes how to build and deploy Polaris locally, and finally includes examples of how to use Polaris with Apache Spark™.
Prerequisites This guide covers building Polaris, deploying it locally or via Docker, and interacting with it using the command-line interface and Apache Spark. Before proceeding with Polaris, be sure to satisfy the relevant prerequisites listed here.</description></item><item><title>Overview</title><link>https://polaris.apache.org/in-dev/0.9.0/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/overview/</guid><description>Apache Polaris (Incubating) is a catalog implementation for Apache Iceberg™ tables and is built on the open source Apache Iceberg™ REST protocol.
With Polaris, you can provide centralized, secure read and write access to your Iceberg tables across different REST-compatible query engines.
Key concepts This section introduces key concepts associated with using Apache Polaris (Incubating).
In the following diagram, a sample Apache Polaris (Incubating) structure with nested namespaces is shown for Catalog1.</description></item><item><title>Apache Polaris (Incubating) CLI</title><link>https://polaris.apache.org/in-dev/0.9.0/command-line-interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/command-line-interface/</guid><description>In order to help administrators quickly set up and manage their Polaris server, Polaris provides a simple command-line interface (CLI) for common tasks.
The basic syntax of the Polaris CLI is outlined below:
polaris [options] COMMAND ... options: --host --port --client-id --client-secret COMMAND must be one of the following:
catalogs principals principal-roles catalog-roles namespaces privileges Each command supports several subcommands, and some subcommands have actions that come after the subcommand in turn.</description></item><item><title>Entities</title><link>https://polaris.apache.org/in-dev/0.9.0/entities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/entities/</guid><description>This page documents various entities that can be managed in Apache Polaris (Incubating).
Catalog A catalog is a top-level entity in Polaris that may contain other entities like namespaces and tables. These map directly to Apache Iceberg catalogs.
For information on managing catalogs with the REST API or for more information on what data can be associated with a catalog, see the API docs.
Storage Type All catalogs in Polaris are associated with a storage type.</description></item><item><title>Access Control</title><link>https://polaris.apache.org/in-dev/0.9.0/access-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/access-control/</guid><description>This section provides information about how access control works for Apache Polaris (Incubating).
Polaris uses a role-based access control (RBAC) model in which the Polaris administrator assigns access privileges to catalog roles and then grants access to resources to service principals by assigning catalog roles to principal roles.
These are the key concepts to understanding access control in Polaris:
Securable object Principal role Catalog role Privilege Securable object A securable object is an object to which access can be granted.</description></item><item><title>Configuring Apache Polaris (Incubating) for Production</title><link>https://polaris.apache.org/in-dev/0.9.0/configuring-polaris-for-production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/configuring-polaris-for-production/</guid><description>The default polaris-server.yml configuration is intended for development and testing. When deploying Polaris in production, there are several best practices to keep in mind.
Security Configurations Notable configuration used to secure a Polaris deployment are outlined below.
oauth2 [!WARNING]
Ensure that the tokenBroker setting reflects the token broker specified in authenticator below.
Configure OAuth with this setting. Remove the TestInlineBearerTokenPolarisAuthenticator option and uncomment the DefaultPolarisAuthenticator authenticator option beneath it. Then, configure the token broker.</description></item><item><title>Metastores</title><link>https://polaris.apache.org/in-dev/0.9.0/metastores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/metastores/</guid><description>This page documents important configurations for connecting to production database through EclipseLink.
Polaris Server Configuration Configure the metaStoreManager section in the Polaris configuration (polaris-server.yml by default) as follows:
metaStoreManager: type: eclipse-link conf-file: META-INF/persistence.xml persistence-unit: polaris conf-file must point to an EclipseLink configuration file
By default, conf-file points to the embedded resource file META-INF/persistence.xml in the polaris-eclipselink module.
In order to specify a configuration file outside the classpath, follow these steps.</description></item><item><title>Apache Polaris Management Service OpenAPI</title><link>https://polaris.apache.org/in-dev/0.9.0/polaris-management-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/polaris-management-service/</guid><description/></item><item><title>Apache Iceberg OpenAPI</title><link>https://polaris.apache.org/in-dev/0.9.0/rest-catalog-open-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/0.9.0/rest-catalog-open-api/</guid><description/></item></channel></rss>