<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Apache Polaris</title><link>https://polaris.apache.org/</link><description>Recent content on Apache Polaris</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 01 Oct 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://polaris.apache.org/index.xml" rel="self" type="application/rss+xml"/><item><title>Quick Start</title><link>https://polaris.apache.org/in-dev/unreleased/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/quickstart/</guid><description>This guide serves as a introduction to several key entities that can be managed with Apache Polaris (Incubating), describes how to build and deploy Polaris locally, and finally includes examples of how to use Polaris with Apache Spark™.
Prerequisites This guide covers building Polaris, deploying it locally or via Docker, and interacting with it using the command-line interface and Apache Spark. Before proceeding with Polaris, be sure to satisfy the relevant prerequisites listed here.</description></item><item><title>Quick Start</title><link>https://polaris.apache.org/releases/0.9.0/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/quickstart/</guid><description>This guide serves as a introduction to several key entities that can be managed with Apache Polaris (Incubating), describes how to build and deploy Polaris locally, and finally includes examples of how to use Polaris with Apache Spark™.
Prerequisites This guide covers building Polaris, deploying it locally or via Docker, and interacting with it using the command-line interface and Apache Spark. Before proceeding with Polaris, be sure to satisfy the relevant prerequisites listed here.</description></item><item><title>Overview</title><link>https://polaris.apache.org/in-dev/unreleased/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/overview/</guid><description>Apache Polaris (Incubating) is a catalog implementation for Apache Iceberg™ tables and is built on the open source Apache Iceberg™ REST protocol.
With Polaris, you can provide centralized, secure read and write access to your Iceberg tables across different REST-compatible query engines.
Key concepts This section introduces key concepts associated with using Apache Polaris (Incubating).
In the following diagram, a sample Apache Polaris (Incubating) structure with nested namespaces is shown for Catalog1.</description></item><item><title>Overview</title><link>https://polaris.apache.org/releases/0.9.0/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/overview/</guid><description>Apache Polaris (Incubating) is a catalog implementation for Apache Iceberg™ tables and is built on the open source Apache Iceberg™ REST protocol.
With Polaris, you can provide centralized, secure read and write access to your Iceberg tables across different REST-compatible query engines.
Key concepts This section introduces key concepts associated with using Apache Polaris (Incubating).
In the following diagram, a sample Apache Polaris (Incubating) structure with nested namespaces is shown for Catalog1.</description></item><item><title>Apache Polaris Proposals &amp; Roadmap</title><link>https://polaris.apache.org/community/proposals/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/community/proposals/</guid><description>Proposals Active
Past
Polaris Roadmap Discussed Roadmap</description></item><item><title>Admin Tool</title><link>https://polaris.apache.org/in-dev/unreleased/admin-tool/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/admin-tool/</guid><description>Polaris includes a tool for administrators to manage the metastore.
The tool must be built with the necessary JDBC drivers to access the metastore database. For example, to build the tool with support for Postgres, run the following:
./gradlew clean :polaris-quarkus-admin:build \ -Dquarkus.container-image.build=true \ -PeclipseLinkDeps=org.postgresql:postgresql:42.7.4 \ --no-build-cache The above command will generate:
One standalone JAR in quarkus/admin/build/polaris-quarkus-admin-*-runner.jar Two distribution archives in quarkus/admin/build/distributions Two Docker images named apache/polaris-admin-tool:latest and apache/polaris-admin-tool:&amp;lt;version&amp;gt; Usage Please make sure the admin tool and Polaris server are with the same version before using it.</description></item><item><title/><link>https://polaris.apache.org/community/code-of-conduct/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/community/code-of-conduct/</guid><description>Contributor Code of Conduct This is a copy of the Contributor Covenant v2.1. No changes have been made.
Our Pledge We as members, contributors, and leaders pledge to make participation in our community a harassment-free experience for everyone, regardless of age, body size, visible or invisible disability, ethnicity, sex characteristics, gender identity and expression, level of experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, or sexual identity and orientation.</description></item><item><title>Command Line Interface</title><link>https://polaris.apache.org/in-dev/unreleased/command-line-interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/command-line-interface/</guid><description>In order to help administrators quickly set up and manage their Polaris server, Polaris provides a simple command-line interface (CLI) for common tasks.
The basic syntax of the Polaris CLI is outlined below:
polaris [options] COMMAND ... options: --host --port --base-url --client-id --client-secret --access-token --profile COMMAND must be one of the following:
catalogs principals principal-roles catalog-roles namespaces privileges profiles Each command supports several subcommands, and some subcommands have actions that come after the subcommand in turn.</description></item><item><title>Apache Polaris (Incubating) CLI</title><link>https://polaris.apache.org/releases/0.9.0/command-line-interface/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/command-line-interface/</guid><description>In order to help administrators quickly set up and manage their Polaris server, Polaris provides a simple command-line interface (CLI) for common tasks.
The basic syntax of the Polaris CLI is outlined below:
polaris [options] COMMAND ... options: --host --port --client-id --client-secret COMMAND must be one of the following:
catalogs principals principal-roles catalog-roles namespaces privileges Each command supports several subcommands, and some subcommands have actions that come after the subcommand in turn.</description></item><item><title/><link>https://polaris.apache.org/community/chat-bylaws/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/community/chat-bylaws/</guid><description>Apache Polaris - Project Chat Bylaws Apache Polaris is currently undergoing Incubation at the Apache Software Foundation.
Motivation Apache Polaris uses public Slack workspace (join here).
A few rules shall ensure that the chat conforms to the rules and best practices of the Apache Software Foundation and serves well as a collaboration tool for the project.
Organizations and other open-source projects that contribute continuously and significantly to Polaris are welcome, but shall not use the Polaris chat as a vehicle for their own marketing without explicit approval of the project (P)PMC.</description></item><item><title>Entities</title><link>https://polaris.apache.org/in-dev/unreleased/entities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/entities/</guid><description>This page documents various entities that can be managed in Apache Polaris (Incubating).
Catalog A catalog is a top-level entity in Polaris that may contain other entities like namespaces and tables. These map directly to Apache Iceberg catalogs.
For information on managing catalogs with the REST API or for more information on what data can be associated with a catalog, see the API docs.
Storage Type All catalogs in Polaris are associated with a storage type.</description></item><item><title>Entities</title><link>https://polaris.apache.org/releases/0.9.0/entities/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/entities/</guid><description>This page documents various entities that can be managed in Apache Polaris (Incubating).
Catalog A catalog is a top-level entity in Polaris that may contain other entities like namespaces and tables. These map directly to Apache Iceberg catalogs.
For information on managing catalogs with the REST API or for more information on what data can be associated with a catalog, see the API docs.
Storage Type All catalogs in Polaris are associated with a storage type.</description></item><item><title>Telemetry</title><link>https://polaris.apache.org/in-dev/unreleased/telemetry/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/telemetry/</guid><description>Metrics Metrics are published using Micrometer; they are available from Polaris&amp;rsquo;s management interface (port 8282 by default) under the path /q/metrics. For example, if the server is running on localhost, the metrics can be accessed via http://localhost:8282/q/metrics.
Metrics can be scraped by Prometheus or any compatible metrics scraping server. See: Prometheus for more information.
Additional tags can be added to the metrics by setting the polaris.metrics.tags.* property. Each tag is a key-value pair, where the key is the tag name and the value is the tag value.</description></item><item><title>Access Control</title><link>https://polaris.apache.org/in-dev/unreleased/access-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/access-control/</guid><description>This section provides information about how access control works for Apache Polaris (Incubating).
Polaris uses a role-based access control (RBAC) model in which the Polaris administrator assigns access privileges to catalog roles and then grants access to resources to service principals by assigning catalog roles to principal roles.
These are the key concepts to understanding access control in Polaris:
Securable object Principal role Catalog role Privilege Securable object A securable object is an object to which access can be granted.</description></item><item><title>Access Control</title><link>https://polaris.apache.org/releases/0.9.0/access-control/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/access-control/</guid><description>This section provides information about how access control works for Apache Polaris (Incubating).
Polaris uses a role-based access control (RBAC) model in which the Polaris administrator assigns access privileges to catalog roles and then grants access to resources to service principals by assigning catalog roles to principal roles.
These are the key concepts to understanding access control in Polaris:
Securable object Principal role Catalog role Privilege Securable object A securable object is an object to which access can be granted.</description></item><item><title/><link>https://polaris.apache.org/community/contributing-guidelines/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/community/contributing-guidelines/</guid><description>Contributing to Apache Polaris Thank you for considering contributing to Apache Polaris. Any contribution (code, test cases, documentation, use cases, &amp;hellip;) is valuable!
This documentation will help you get started.
Contribute bug reports and feature requests You can report an issue in the Polaris Catalog issue tracker.
How to report a bug Note: If you find a security vulnerability, do NOT open an issue. Please email security@apache.org instead.
When filing an issue, make sure to answer these five questions:</description></item><item><title>Configuring Polaris</title><link>https://polaris.apache.org/in-dev/unreleased/configuration/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/configuration/</guid><description>Overview This page provides information on how to configure Apache Polaris (Incubating). Unless stated otherwise, this information is valid both for Polaris Docker images (and Kubernetes deployments) as well as for Polaris binary distributions.
Note: for Production tips and best practices, refer to Configuring Polaris for Production.
First off, Polaris server runs on Quarkus, and uses its configuration mechanisms. Read Quarkus configuration guide to get familiar with the basics.
Quarkus aggregates configuration properties from multiple sources, applying them in a specific order of precedence.</description></item><item><title>Configuring Apache Polaris (Incubating) for Production</title><link>https://polaris.apache.org/in-dev/unreleased/configuring-polaris-for-production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/configuring-polaris-for-production/</guid><description>Configuring Polaris for Production The default server configuration is intended for development and testing. When deploying Polaris in production, there are several best practices to keep in mind.
Notable configuration used to secure a Polaris deployment are outlined below.
For more information on how to configure Polaris and what configuration options are available, refer to the configuration reference page.
OAuth2 Polaris authentication requires specifying a token broker factory type. Two implementations are supported out of the box:</description></item><item><title>Configuring Apache Polaris (Incubating) for Production</title><link>https://polaris.apache.org/releases/0.9.0/configuring-polaris-for-production/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/configuring-polaris-for-production/</guid><description>The default polaris-server.yml configuration is intended for development and testing. When deploying Polaris in production, there are several best practices to keep in mind.
Security Configurations Notable configuration used to secure a Polaris deployment are outlined below.
oauth2 [!WARNING]
Ensure that the tokenBroker setting reflects the token broker specified in authenticator below.
Configure OAuth with this setting. Remove the TestInlineBearerTokenPolarisAuthenticator option and uncomment the DefaultPolarisAuthenticator authenticator option beneath it. Then, configure the token broker.</description></item><item><title>Metastores</title><link>https://polaris.apache.org/in-dev/unreleased/metastores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/metastores/</guid><description>This page documents important configurations for connecting to a production database through EclipseLink.
Building Polaris with EclipseLink Polaris doesn&amp;rsquo;t ship with any JDBC driver. You must specify them when building Polaris with EclipseLink by using Gradle&amp;rsquo;s project property: -PeclipseLinkDeps=&amp;lt;jdbc-driver-artifact1&amp;gt;,&amp;lt;jdbc-driver-artifact2&amp;gt;,.... See below examples for H2 and Postgres.
Polaris Server Configuration Configure the polaris.persistence section in your Polaris configuration file (application.properties) as follows:
polaris.persistence.type=eclipse-link polaris.persistence.eclipselink.configuration-file=/path/to/persistence.xml polaris.persistence.eclipselink.persistence-unit=polaris Alternatively, configuration can also be done with environment variables or system properties.</description></item><item><title>Metastores</title><link>https://polaris.apache.org/releases/0.9.0/metastores/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/metastores/</guid><description>This page documents important configurations for connecting to production database through EclipseLink.
Polaris Server Configuration Configure the metaStoreManager section in the Polaris configuration (polaris-server.yml by default) as follows:
metaStoreManager: type: eclipse-link conf-file: META-INF/persistence.xml persistence-unit: polaris conf-file must point to an EclipseLink configuration file
By default, conf-file points to the embedded resource file META-INF/persistence.xml in the polaris-eclipselink module.
In order to specify a configuration file outside the classpath, follow these steps.</description></item><item><title>Apache Polaris Management Service OpenAPI</title><link>https://polaris.apache.org/in-dev/unreleased/polaris-management-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/polaris-management-service/</guid><description> Top</description></item><item><title>Apache Polaris Management Service OpenAPI</title><link>https://polaris.apache.org/releases/0.9.0/polaris-management-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/polaris-management-service/</guid><description> Top</description></item><item><title/><link>https://polaris.apache.org/in-dev/unreleased/polaris-catalog-service/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/unreleased/polaris-catalog-service/</guid><description> Top</description></item><item><title>Apache Iceberg OpenAPI</title><link>https://polaris.apache.org/releases/0.9.0/rest-catalog-open-api/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/0.9.0/rest-catalog-open-api/</guid><description> Top</description></item><item><title>Dummy Post</title><link>https://polaris.apache.org/blog/2024/10/01/dummy-post/</link><pubDate>Tue, 01 Oct 2024 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/blog/2024/10/01/dummy-post/</guid><description>Just a dummy</description></item><item><title/><link>https://polaris.apache.org/downloads/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/downloads/</guid><description> Downloads Releases 0.9.0 Apache Polaris 0.9.0 release is the first Polaris release. Only the source distribution is available for this release.
https://downloads.apache.org/incubator/polaris/0.9.0-incubating/apache-polaris-0.9.0-incubating.tar.gz asc sha512 KEYS</description></item><item><title>POLARIS VERSION INDEX MD TEMPLATE</title><link>https://polaris.apache.org/in-dev/release_index/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/in-dev/release_index/</guid><description>== Apache Polaris version [unreleased]
Download from &amp;hellip;</description></item></channel></rss>