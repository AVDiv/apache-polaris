<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Getting Started on Apache Polaris</title><link>https://polaris.apache.org/releases/1.0.1/getting-started/</link><description>Recent content in Getting Started on Apache Polaris</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://polaris.apache.org/releases/1.0.1/getting-started/index.xml" rel="self" type="application/rss+xml"/><item><title>Installing Dependencies</title><link>https://polaris.apache.org/releases/1.0.1/getting-started/install-dependencies/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/1.0.1/getting-started/install-dependencies/</guid><description>This guide serves as an introduction to several key entities that can be managed with Apache Polaris (Incubating), describes how to build and deploy Polaris locally, and finally includes examples of how to use Polaris with Apache Sparkâ„¢.
Prerequisites This guide covers building Polaris, deploying it locally or via Docker, and interacting with it using the command-line interface and Apache Spark. Before proceeding with Polaris, be sure to satisfy the relevant prerequisites listed here.</description></item><item><title>Quickstart</title><link>https://polaris.apache.org/releases/1.0.1/getting-started/quickstart/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/1.0.1/getting-started/quickstart/</guid><description>Polaris can be deployed via a docker image or as a standalone process. Before starting, be sure that you&amp;rsquo;ve satisfied the relevant prerequisites detailed in the previous page.
Common Setup Before running Polaris, ensure you have completed the following setup steps:
Build Polaris cd ~/polaris ./gradlew \ :polaris-server:assemble \ :polaris-server:quarkusAppPartsBuild \ :polaris-admin:assemble --rerun \ -Dquarkus.container-image.tag=postgres-latest \ -Dquarkus.container-image.build=true For standalone: Omit the -Dquarkus.container-image.tag and -Dquarkus.container-image.build options if you do not need to build a Docker image.</description></item><item><title>Using Polaris</title><link>https://polaris.apache.org/releases/1.0.1/getting-started/using-polaris/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://polaris.apache.org/releases/1.0.1/getting-started/using-polaris/</guid><description>Setup Ensure your CLIENT_ID &amp;amp; CLIENT_SECRET variables are already defined, as they were required for starting the Polaris server earlier.
export CLIENT_ID=YOUR_CLIENT_ID export CLIENT_SECRET=YOUR_CLIENT_SECRET Defining a Catalog In Polaris, the catalog is the top-level entity that objects like tables and views are organized under. With a Polaris service running, you can create a catalog like so:
cd ~/polaris ./polaris \ --client-id ${CLIENT_ID} \ --client-secret ${CLIENT_SECRET} \ catalogs \ create \ --storage-type s3 \ --default-base-location ${DEFAULT_BASE_LOCATION} \ --role-arn ${ROLE_ARN} \ quickstart_catalog This will create a new catalog called quickstart_catalog.</description></item></channel></rss>